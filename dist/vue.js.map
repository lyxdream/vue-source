{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["//此处存放所有的工具方法\n\nexport function isObject(obj){\n    return typeof obj =='object' && obj!==null\n}","let oldArrayMethods = Array.prototype;//获取数组原型上的方法\n//创建一个全新的对象 可以找到数组原型上的方法，而且修改对象时不会影响原数组的原型方法\n// Object.create()方法会创建一个新对象，使用现有对象来提供新创建的对象的__proto__\nexport let arrayMethods = Object.create(oldArrayMethods);\nlet methods = [  //这七个方法都可以改变原数组\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'sort',\n    'reverse',\n    'splice'\n]\nmethods.forEach(method =>{   //函数劫持 \bAOP\n    console.log(method)\n    // 这样就调用arrayMethods自身的方法，但是这样不会发生变化\n    //于是就需要调用数组原来的方法，既函数劫持\n    arrayMethods[method] = function(...args){\n        //当用户调用数组的方法时 先执行我自己改造的逻辑 再执行数组默认的逻辑\n        const ob = this.__ob__; \n        console.log(ob)\n        let result =  oldArrayMethods[method].apply(this,args);\n        let inserted;\n        //push unshift splice 都可以新增属性 （新增的属性可能是一个对象类型）\n        //内部还对数组中引用类型也做了一次劫持\n        switch(method){\n            case 'push':\n            case 'unshift':\n                  inserted = args;\n                break;\n            case 'splice':    //也是新增属性 可以修改 可以删除   [].splice(arr,1,'div')\n                inserted = args.slice(2);\n                break;\n            default:\n                break;\n        }\n        inserted&&ob.observeArray(inserted);//观测数组中新增的每一项\n        console.log('新增')\n        return result;\n\n    }\n})\n\n","import {isObject} from '../utils.js'\nimport { arrayMethods } from './array'\n class Observer{\n   constructor(data){\n      console.log(data)\n    // 对数组索引进行拦截 性能差而且直接更改索引的方式并不多\n     // data.__ob__  = this;//可以在数据上获取__ob__这个属性 指代的是Observer的实例\n    //__ob__是一个响应式属性，对象数组都有\n    Object.defineProperty(data,'__ob__',{\n        enumerable:false,\n        configurable:false,\n        value:this\n    })\n  \n    if(Array.isArray(data)){\n        //vue 如何对数组进行处理？数组用的是重写数组的方法 函数劫持\n        //改变的数组方法就可以监控到了 改写了数组的原型链\n        data.__proto__ = arrayMethods;//通过原型链 向上查找的方式\n        //[{a:1}] =>arr[0].a = 100\n        this.observeArray(data);//观测数组中的每一项 \n    }else{\n        this.walk(data) //可以对数据一步步的处理\n    }\n   }\n   //检测数组中引用类型的方法\n   observeArray(data){\n       for(let i=0;i<data.length;i++){\n            observe(data[i])\n       }\n   }\n   walk(data){\n        //对象的循坏\n        // console.log(Object.keys(data))\n        Object.keys(data).forEach(key=>{\n            defineReactive(data,key,data[key]);//定义响应式的数据变化\n            // console.log(key)\n        })\n   }\n\n}\n//vue2的性能 递归重写get和set \nfunction defineReactive(data,key,value){\n    observe(value);//如果传入的值还是一个对象就做递归循环检测\n    Object.defineProperty(data,key,{\n        get(){\n            return value;\n        },\n        set(newValue){\n             if(newValue=== value) return;\n             observe(newValue);//检测当前设置的值是否是一个对象 //有可能用户给的新值是一个对象\n            value = newValue\n        }\n    })\n}\nexport function observe(data){\n    //对象就是使用 define\bProperty来实现响应式原理\n    // console.log(data)\n    //如果这个数据不是对象 或者是null 那就不用监控了\n    if(!isObject(data)){\n        return;\n    }\n    if(data.__ob__ instanceof Observer){  //防止对象被重复观测\n         return;\n    }\n    //对数据进行defineProperty  \n    return new Observer(data) //可以看到当前数据是否被观测过\n   \n}","import {observe} from './observe/index.js'\nexport function initState(vm){\n    const opts = vm.$options;\n    if(opts.props){\n        initProps(vm)\n    }\n    if(opts.methods){\n        initMethod(vm);\n    }\n    if(opts.data){\n        initData(vm);\n    }\n    //computed ...watch\n}\nfunction initProps(){\n\n}\nfunction initMethod(){\n\n}\nfunction initData(vm){\n    //数据响应式\n    // console.log(vm.$options.data)\n let data = vm.$options.data;\n //vm._data检测后的数据\n data = vm._data = typeof data==='function' ?data.call(vm):data;\n//  console.log(data)\n //观测数据\n  observe(data);\n}","import {initState} from './state.js'\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){\n        // console.log(options)\n        //Vue内部的$options 就是用户传递的所有参数\n        const vm = this;\n        vm.$options = options;//用户传入的参数\n        //options.data props watch computed  //状态\n        initState(vm);//初始化状态\n    }\n}","import {initMixin} from './init.js'\nfunction Vue(options){\n    //内部进行初始化的操作\n    this._init(options);//初始化操作\n}\ninitMixin(Vue)  //添加原型的方法\n//组件的初始化\nexport default Vue;"],"names":["isObject","obj","oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","console","log","args","ob","__ob__","result","apply","inserted","slice","observeArray","Observer","constructor","data","defineProperty","enumerable","configurable","value","isArray","__proto__","walk","i","length","observe","keys","key","defineReactive","get","set","newValue","initState","vm","opts","$options","props","initData","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}