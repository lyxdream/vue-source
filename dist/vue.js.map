{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/complier/parser.js","../src/complier/generator.js","../src/complier/index.js","../src/init.js","../src/index.js"],"sourcesContent":["//此处存放所有的工具方法\n\nexport function isObject(obj){\n    return typeof obj =='object' && obj!==null\n}","let oldArrayMethods = Array.prototype;//获取数组原型上的方法\n//创建一个全新的对象 可以找到数组原型上的方法，而且修改对象时不会影响原数组的原型方法\n// Object.create()方法会创建一个新对象，使用现有对象来提供新创建的对象的__proto__\nexport let arrayMethods = Object.create(oldArrayMethods);\nlet methods = [  //这七个方法都可以改变原数组\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'sort',\n    'reverse',\n    'splice'\n]\nmethods.forEach(method =>{   //函数劫持 \bAOP\n    // console.log(method)\n    // 这样就调用arrayMethods自身的方法，但是这样不会发生变化\n    //于是就需要调用数组原来的方法，既函数劫持\n    arrayMethods[method] = function(...args){\n        //当用户调用数组的方法时 先执行我自己改造的逻辑 再执行数组默认的逻辑\n        const ob = this.__ob__; \n        // console.log(ob)\n        let result =  oldArrayMethods[method].apply(this,args);\n        let inserted;\n        //push unshift splice 都可以新增属性 （新增的属性可能是一个对象类型）\n        //内部还对数组中引用类型也做了一次劫持\n        switch(method){\n            case 'push':\n            case 'unshift':\n                  inserted = args;\n                break;\n            case 'splice':    //也是新增属性 可以修改 可以删除   [].splice(arr,1,'div')\n                inserted = args.slice(2);\n                break;\n            default:\n                break;\n        }\n        inserted&&ob.observeArray(inserted);//观测数组中新增的每一项\n        // console.log('新增')\n        return result;\n\n    }\n})\n\n","import {isObject} from '../utils.js'\nimport { arrayMethods } from './array'\n class Observer{\n   constructor(data){\n    //   console.log(data)\n    // 对数组索引进行拦截 性能差而且直接更改索引的方式并不多\n     // data.__ob__  = this;//可以在数据上获取__ob__这个属性 指代的是Observer的实例\n    //__ob__是一个响应式属性，对象数组都有\n    Object.defineProperty(data,'__ob__',{\n        enumerable:false,\n        configurable:false,\n        value:this\n    })\n  \n    if(Array.isArray(data)){\n        //vue 如何对数组进行处理？数组用的是重写数组的方法 函数劫持\n        //改变的数组方法就可以监控到了 改写了数组的原型链\n        data.__proto__ = arrayMethods;//通过原型链 向上查找的方式\n        //[{a:1}] =>arr[0].a = 100\n        this.observeArray(data);//观测数组中的每一项 \n    }else{\n        this.walk(data) //可以对数据一步步的处理\n    }\n   }\n   //检测数组中引用类型的方法\n   observeArray(data){\n       for(let i=0;i<data.length;i++){\n            observe(data[i])\n       }\n   }\n   walk(data){\n        //对象的循坏\n        // console.log(Object.keys(data))\n        Object.keys(data).forEach(key=>{\n            defineReactive(data,key,data[key]);//定义响应式的数据变化\n            // console.log(key)\n        })\n   }\n\n}\n//vue2的性能 递归重写get和set \nfunction defineReactive(data,key,value){\n    observe(value);//如果传入的值还是一个对象就做递归循环检测\n    Object.defineProperty(data,key,{\n        get(){\n            return value;\n        },\n        set(newValue){\n             if(newValue=== value) return;\n             observe(newValue);//检测当前设置的值是否是一个对象 //有可能用户给的新值是一个对象\n            value = newValue\n        }\n    })\n}\nexport function observe(data){\n    //对象就是使用 define\bProperty来实现响应式原理\n    // console.log(data)\n    //如果这个数据不是对象 或者是null 那就不用监控了\n    if(!isObject(data)){\n        return;\n    }\n    if(data.__ob__ instanceof Observer){  //防止对象被重复观测\n         return;\n    }\n    //对数据进行defineProperty  \n    return new Observer(data) //可以看到当前数据是否被观测过\n   \n}","import {observe} from './observe/index.js'\nexport function initState(vm){\n    const opts = vm.$options;\n    if(opts.props){\n        initProps(vm)\n    }\n    if(opts.methods){\n        initMethod(vm);\n    }\n    if(opts.data){\n        initData(vm);\n    }\n    //computed ...watch\n}\nfunction initProps(){\n\n}\nfunction initMethod(){\n\n}\nfunction initData(vm){\n    //数据响应式\n    // console.log(vm.$options.data)\n let data = vm.$options.data;\n //vm._data检测后的数据\n data = vm._data = typeof data==='function' ?data.call(vm):data;\n//  console.log(data)\n //观测数据\n  observe(data);\n}","//字母a-zA-Z_  - .数字_ 小写字母大写字母 \nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;  //标签名\n//?:匹配不捕获 <aaa:aaa> \nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\n\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\n//<div aaa =\"123\" bb=123 cc='123\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\n// +?尽可能少取 {{a}} {{b}}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g//匹配动态变量\n \n// v2.0只能有一个根节点  必须是html元素\n//currentParent = divAstElement\n//stack = [divAstElement]\nexport function parseHTML(html){\n    let root;//树根\n    let currentParent;//当前元素ast\n    let stack = [];//用来判断标签是否正常闭合 []解析器可以借助栈形结构\n    //利用常见的数据结构来解析标签\n    //根据 html 解析成树结构 <div id=\"app\" style=\"color:red\"><span>helloword {{msg}}</span></div>\n    function createASTElement(tagName,attrs){\n        return{\n            tag:tagName,\n            attrs:attrs, \n            children:[],\n            parent:null,\n            type:1,//1元素节点  3 文本节点\n        }\n    }\n    function start(tagName,attrs){  //开始标签  每次解析开始标签都会执行此方法\n        let element = createASTElement(tagName,attrs);\n        if(!root){\n            root = element; //只有第一次是根\n            // console.log(root)\n        }\n        // currentParent = JSON.parse(JSON.stringify(element));//保存当前标签\n        currentParent = element;//保存当前标签，当子级是文本标签的时候改变当前标签的children\n        stack.push(element)\n        // console.log(tagName,attrs)\n    }\n    function end(tagName){ //结束标签  确立父子关系\n        // console.log(tagName)\n       let element = stack.pop();//stack中最后一位出栈,并返回\n    \n       if(tagName ==element.tag){  //判断当前闭合的标签名和栈中最后一位是否一致\n            let parent = stack[stack.length-1];//获取当前闭合元素父级\n            if(parent){\n                element.parent = parent;\n                parent.children.push(element)\n            } \n       }else{\n           console.log('标签闭合有误！')\n       }\n    }\n    function chars(text){ //文本标签\n        // console.log(text)\n        text = text.replace(/\\s/g,'');\n        if(text){\n            currentParent.children.push({    //push进当前文本标签的父级元素\n                type:3,\n                text\n            })\n        }\n    }\n    while(html){\n        let textend = html.indexOf('<');\n        if(textend==0){\n            const startTagMatch = parseStartTag();\n            // console.log(startTagMatch,html)\n            if(startTagMatch){\n                //开始标签\n                 // console.log(startTagMatch,'开始')\n                start(startTagMatch.tagName,startTagMatch.attrs)   \n            }\n            //结束标签\n            const endTagMatch = html.match(endTag);\n            if(endTagMatch){\n                //  console.log(endTagMatch)\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1])\n            }\n           \n        }\n       //如果不是0说明是文本\n        let text;\n        if(textend>0){\n            text = html.substring(0,textend);//把文本内容进行截取\n            // console.log(text)\n            chars(text)\n        }\n        if(text){\n            advance(text.length);//删除文本内容\n        }\n        \n    }\n    function advance(n){\n        html = html.substring(n)\n    }\n    function parseStartTag(){\n        const start = html.match(startTagOpen) //匹配<div>\n        // console.log(start)\n        if(start){\n            const match = {\n                tagName:start[1],//匹配标签名\n                attrs:[]\n            }\n            advance(start[0].length);//截取开始标签后面的\n            let end,attr;\n            while(!(end = html.match(startTagClose))&&(attr = html.match(attribute))){\n                advance(attr[0].length)\n                //  console.log(attr)\n                 //双引号是第三项 单引号是第四项 \n                match.attrs.push({name:attr[1],value:attr[3] || attr[4] || attr[5]})\n            }\n            // console.log(html)\n            if(end){\n                advance(end[0].length);\n                return match;\n            }\n        }\n    }\n    return root;\n}","// +?尽可能少取 {{a}} {{b}}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g//匹配动态变量\nfunction genProps(attrs){\n    let str = '';\n    for(let i=0;i<attrs.length;i++){\n        let attr = attrs[i];//取到每一个属性\n        if(attr.name==='style'){\n             let obj = {};\n            //   value:\"color:red;background:green\"转换成\n            //   value:{color: \"red\", background: \"green\"}\n             attr.value.split(\";\").forEach(item => {\n                 let [key,value] = item.split(\":\");\n                 obj[key] = value;\n             });\n             attr.value = obj;  //将原来的字符串换成来刚格式化的对象\n        }\n        // console.log(attr)\n        str += `${attr.name}:${JSON.stringify(attr.value)}，`\n    }\n    // console.log(str)\n    // 截取多余的一个逗号,并加上{}\n    // console.log(`{${str.slice(0,-1)}}`)\n    return `{${str.slice(0,-1)}}`\n}\nfunction genNode(node){\n    if(node.type===1){\n        return generate(node)\n    }else if(node.type==3){\n        let text = node.text;\n        //helloword {{mag}}\n        if(!defaultTagRE.test(text)){ //如果没有变量\n            return `_v(${JSON.stringify(text)})`\n        }else{\n            let tokens = []; //全局正则，每次正则使用过后 都需要重新指定lastIndex的位置\n            let lastIndex = defaultTagRE.lastIndex = 0;\n            let match,index; //index当前匹配到的索引\n            // console.log(text,'text')\n            while(match=defaultTagRE.exec(text)){  //使用正则不断捕获\n                index = match.index;\n                //通过lastIndex,index\n                if(text.slice(lastIndex,index)){\n                    //去空格\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)))\n                }  \n                tokens.push(`_s(${match[1].trim()})`)\n                // console.log(tokens)\n                lastIndex = index + match[0].length;  \n            }\n            if(lastIndex<text.length){\n                //如果匹配完{{}}之后 lastIndex<text.length说明末尾还有不带{{}}的文本\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            // console.log(tokens)\n            return `_v(${tokens.join('+')})`;\n            //helloword {{mag}} aa  =>_v('helloword'+_s(msg)+\"aa\")\n        }\n    }\n}\nfunction genChildren(el){\n   const children = el.children;\n   if(children){\n        return children.map(c=>genNode(c)).join(\",\")\n   }else{\n        return false;\n   }\n}\nexport function generate(el){\n    //放进来的是树根节点\n    // console.log(el)\n    //[{name:\"id\",value:\"app\"},{name: \"style\", value: \"color:red;background:green\"}]转换成\n    // id:'app',style:{color:\"red\";background:\"green\"}\n    //  然后再把style里面的属性值转换成字符串\n    let children = genChildren(el);//生成孩子字符串\n    let code = `\n        _c(\"${el.tag}\",${\n            el.attrs.length?`${genProps(el.attrs)}`:undefined\n        }${\n            children?`,${children}`:''\n        })`;\n  \n    // console.log(code)\n    return code;\n}","\nimport { parseHTML } from './parser.js'\nimport {generate} from './generator.js'\nexport function complieToFunctions(template){\n    // console.log(template)\n    //实现模版编译的内容\n    let ast = parseHTML(template);//解析html\n     //核心是字符串拼接\n    let code = generate(ast);// 代码生成\n    console.log(code)\n   \n    // template =>render 函数\n    //_v 有三个参数，分别是\n      // 标签名  一个包含模版相关属性的数据对象 子节点列表\n    /*\n     <div id='app' style=\"color:red\"><span>helloword {{msg}}</span><b>加租</b></div>\n     render(){\n        with(this._data){\n            return _c('div',{id:'app',style:{color:'red'}},_c('span',undefined,_v('helloword'+_s(msg))))\n        }\n     }\n    */\n\n    //模版编译原理\n    //1、将模版解析成AST语法树   (1)parser解析(正则)\n    //2、遍历AST标记静态树       （2）树遍历标记 markup\n    //3、使用AST生成渲染函数（render函数） codegen\n    \n    \n}\n\n","import {initState} from './state.js'\nimport {complieToFunctions} from './complier/index.js'\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){\n        // console.log(options)\n        //Vue内部的$options 就是用户传递的所有参数\n        const vm = this;\n        vm.$options = options;//用户传入的参数\n        //options.data props watch computed  //状态\n        initState(vm);//初始化状态\n\n        //需要通过模版进行渲染\n        if(vm.$options.el){  //用户传入来el属性\n            vm.$mount(vm.$options.el)\n        }\n    }\n    Vue.prototype.$mount = function(el){  //可能是字符串 也可以传入一个dom对象\n        const vm = this;\n        el = document.querySelector(el);//获取el属性\n        //如果同时传入 template 和render 默认会采用render 抛弃template,如果都没传就使用id=\"app\"中的模版\n        // console.log(el)\n        const opts = vm.$options;\n        if(!opts.render){\n            let template = opts.template;\n            if(!template&&el){  //应该使用外部模版\n                // let div = document.createElement('div');\n                // div.appendChild(el);\n                // template = div.innerHTML;\n                template = el.outerHTML;\n            }\n            const render = complieToFunctions(template);\n            opts.render = render;\n        }\n        //走到这里说明不需要编译了，因为用户传入的就是一个render函数\n        opts.render;\n    }\n}","import {initMixin} from './init.js'\nfunction Vue(options){\n    //内部进行初始化的操作\n    this._init(options);//初始化操作\n}\ninitMixin(Vue)  //添加原型的方法\n//组件的初始化\nexport default Vue;"],"names":["isObject","obj","oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","ob","__ob__","result","apply","inserted","slice","observeArray","Observer","constructor","data","defineProperty","enumerable","configurable","value","isArray","__proto__","walk","i","length","observe","keys","key","defineReactive","get","set","newValue","initState","vm","opts","$options","props","initData","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","stack","createASTElement","tagName","attrs","tag","children","parent","type","start","element","push","end","pop","console","log","chars","text","replace","textend","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","split","item","JSON","stringify","genNode","node","generate","test","tokens","lastIndex","index","exec","trim","join","genChildren","el","map","c","code","undefined","complieToFunctions","template","ast","initMixin","Vue","_init","options","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}